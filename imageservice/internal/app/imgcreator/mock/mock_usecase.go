// Code generated by MockGen. DO NOT EDIT.
// Source: imageservice/internal/app/imgcreator (interfaces: ImgCreatorI)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImgCreatorI is a mock of ImgCreatorI interface.
type MockImgCreatorI struct {
	ctrl     *gomock.Controller
	recorder *MockImgCreatorIMockRecorder
}

// MockImgCreatorIMockRecorder is the mock recorder for MockImgCreatorI.
type MockImgCreatorIMockRecorder struct {
	mock *MockImgCreatorI
}

// NewMockImgCreatorI creates a new mock instance.
func NewMockImgCreatorI(ctrl *gomock.Controller) *MockImgCreatorI {
	mock := &MockImgCreatorI{ctrl: ctrl}
	mock.recorder = &MockImgCreatorIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImgCreatorI) EXPECT() *MockImgCreatorIMockRecorder {
	return m.recorder
}

// CreateImg mocks base method.
func (m *MockImgCreatorI) CreateImg(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateImg", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateImg indicates an expected call of CreateImg.
func (mr *MockImgCreatorIMockRecorder) CreateImg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateImg", reflect.TypeOf((*MockImgCreatorI)(nil).CreateImg), arg0)
}

// CropImg mocks base method.
func (m *MockImgCreatorI) CropImg(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CropImg", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CropImg indicates an expected call of CropImg.
func (mr *MockImgCreatorIMockRecorder) CropImg(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CropImg", reflect.TypeOf((*MockImgCreatorI)(nil).CropImg), arg0)
}
