// Code generated by MockGen. DO NOT EDIT.
// Source: FL_2/store (interfaces: MediaStore)

// Package mock is a generated GoMock package.
package mock

import (
	store "FL_2/store"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMediaStore is a mock of MediaStore interface.
type MockMediaStore struct {
	ctrl     *gomock.Controller
	recorder *MockMediaStoreMockRecorder
}

// MockMediaStoreMockRecorder is the mock recorder for MockMediaStore.
type MockMediaStoreMockRecorder struct {
	mock *MockMediaStore
}

// NewMockMediaStore creates a new mock instance.
func NewMockMediaStore(ctrl *gomock.Controller) *MockMediaStore {
	mock := &MockMediaStore{ctrl: ctrl}
	mock.recorder = &MockMediaStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMediaStore) EXPECT() *MockMediaStoreMockRecorder {
	return m.recorder
}

// Image mocks base method.
func (m *MockMediaStore) Image() store.ImageRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Image")
	ret0, _ := ret[0].(store.ImageRepository)
	return ret0
}

// Image indicates an expected call of Image.
func (mr *MockMediaStoreMockRecorder) Image() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Image", reflect.TypeOf((*MockMediaStore)(nil).Image))
}
