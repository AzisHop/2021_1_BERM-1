// Code generated by MockGen. DO NOT EDIT.
// Source: FL_2/store (interfaces: Caсhe)

// Package mock is a generated GoMock package.
package mock

import (
	store "FL_2/store"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCaсhe is a mock of Caсhe interface.
type MockCaсhe struct {
	ctrl     *gomock.Controller
	recorder *MockCaсheMockRecorder
}

// MockCaсheMockRecorder is the mock recorder for MockCaсhe.
type MockCaсheMockRecorder struct {
	mock *MockCaсhe
}

// NewMockCaсhe creates a new mock instance.
func NewMockCaсhe(ctrl *gomock.Controller) *MockCaсhe {
	mock := &MockCaсhe{ctrl: ctrl}
	mock.recorder = &MockCaсheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCaсhe) EXPECT() *MockCaсheMockRecorder {
	return m.recorder
}

// Session mocks base method.
func (m *MockCaсhe) Session() store.SessionRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Session")
	ret0, _ := ret[0].(store.SessionRepository)
	return ret0
}

// Session indicates an expected call of Session.
func (mr *MockCaсheMockRecorder) Session() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Session", reflect.TypeOf((*MockCaсhe)(nil).Session))
}
